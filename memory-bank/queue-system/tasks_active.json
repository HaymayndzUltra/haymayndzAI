[
  {
    "id": "final_implementation_plan_actionable_20250119",
    "description": "Actionable plan compiled from Final Implementation Plan (memory-bank/plan/organize.md) - Foundational hardening, memory subsystem remediation, QA gates, observability, security, and enforcement escalation.",
    "status": "in_progress",
    "created": "2025-01-19T10:30:00+08:00",
    "updated": "2025-01-19T10:30:00+08:00",
    "todos": [
      {
        "text": "PHASE 0: SETUP & PROTOCOL (READ FIRST)\n\n**Explanations:**\nThis is the mandatory setup phase that establishes execution protocols and environment constraints for the entire implementation plan. All subsequent phases depend on these foundational protocols being understood and followed.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 0\n```\n\n**IMPORTANT NOTE:** Agent scope is execution-only; no direct file writes to queue/state files. All JSON outputs are content-only for system/operator placement. Environment variables and read-only analyzers must be used as specified. Timestamps must use Philippines timezone (+08:00). All schema validations and CI gates must pass before proceeding to next phases.",
        "done": false
      },
      {
        "text": "PHASE 1: FOUNDATIONAL HARDENING AND TOOLING SETUP\n\n**Explanations:**\nDefine global contracts (critical transitions), telemetry schema (dual timestamps + correlation_id), versioned JSON schemas, docs freshness SLO, acceptance criteria, CI schema-validation, centralized config with RBAC, waivers, and disk policies.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 1\n```\n\n**IMPORTANT NOTE:** All schemas must be versioned JSON with strict validation. Telemetry requires dual timestamps (UTC Z and +08:00). RBAC enforcement must be implemented for MEMORY_WRITES_MODE and AI_ENFORCEMENT_MODE. Documentation SLO is ≤48h update, block after 72h. All CI schema-validation jobs must pass.",
        "done": false
      },
      {
        "text": "PHASE 2: MEMORY SUBSYSTEM REMEDIATION (WITH SAFETY FLAGS)\n\n**Explanations:**\nImplement atomic IO, watcher adapters, serialized report updates, single-writer bridge with metrics, staged rollout of memory write modes, DR snapshots, and reader/watcher migration.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 2\n```\n\n**IMPORTANT NOTE:** Atomic writes include directory fsync; staged rollout direct → atomic → dual_write → bridge; bridge provides idempotent append, monotonic sequence, durability, retries, DLQ, backpressure; DR with defined RPO/RTO and tested restore.",
        "done": false
      },
      {
        "text": "PHASE 3: QA GATE REMEDIATION AND CI HARDENING\n\n**Explanations:**\nEnforce coverage thresholds (≥90% line, ≥80% branch), security scan with policy/waivers, performance CI pinned to acceptance criteria, cross-vertical integration tests, 3 consecutive greens before escalation.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 3\n```\n\n**IMPORTANT NOTE:** Coverage regressions >2% fail builds; HIGH/CRITICAL gate post-waiver; p95 and variance vs baseline with confidence intervals; integration suites must include routing, orchestrator, memory, docs, deploy/obs health.",
        "done": false
      },
      {
        "text": "PHASE 4: DOCUMENTATION, DEPLOYABILITY, AND OBSERVABILITY TIGHTENING\n\n**Explanations:**\nTest orchestrator critical transitions (≥90% coverage), docs provenance lint + freshness SLO enforcement, monitoring config schema validation, telemetry dual-stamp + correlation_id, observability monitors.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 4\n```\n\n**IMPORTANT NOTE:** Documentation promotion blocks after 72h SLO breach; telemetry must enforce dual timestamps and X-Correlation-Id; alerts tied to enforcement mode SLOs.",
        "done": false
      },
      {
        "text": "PHASE 5: ARTIFACT INTEGRITY, SBOM, AND SUPPLY CHAIN SECURITY\n\n**Explanations:**\nGenerate SPDX SBOM with digests and commit SHA; sign artifacts and create attestations; verify in CI; publish artifact_digests.json.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 5\n```\n\n**IMPORTANT NOTE:** SBOM must be SPDX; all artifacts require valid signatures and attestations; digests must be published with builds.",
        "done": false
      },
      {
        "text": "PHASE 6: CONCURRENCY-SAFE REPORTING AND GOVERNANCE\n\n**Explanations:**\nSerialize PASS flips via bridge/mutex; atomic updates with directory fsync; enforce RBAC and audit for governance changes.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 6\n```\n\n**IMPORTANT NOTE:** CI must reject non-atomic report writes; unauthorized governance changes must alert and be audited.",
        "done": false
      },
      {
        "text": "PHASE 7: ENFORCEMENT MODE ESCALATION\n\n**Explanations:**\nProgress AI_ENFORCEMENT_MODE solo → shadow → soft_block → hard_block with emergency overrides via expiring signed waivers (RBAC enforced).\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 7\n```\n\n**IMPORTANT NOTE:** Require 3 consecutive greens including integration suites before hard block.",
        "done": false
      },
      {
        "text": "PHASE 8: VERIFICATION AND CLOSE-OUT\n\n**Explanations:**\nRe-run vertical verifications, update findings and reports, atomically refresh master report and summary, freeze when all PASS and enforcement hard_block, publish runbook.\n\n**Concluding Step: Phase Completion Protocol**\n```bash\npython3 todo_manager.py show <task_id>\npython3 todo_manager.py done <task_id> 8\n```\n\n**IMPORTANT NOTE:** Freeze only after signatures verified and atomic updates confirmed; runbook must include commands, rollbacks, waivers, and contacts.",
        "done": false
      }
    ]
  }
]
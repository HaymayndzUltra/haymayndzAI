{
  "BL-001": {
    "title": "Orchestrator role selection + rule attach logging (stabilize)",
    "priority": "P0",
    "type": "feature",
    "owner_role": "execution_orchestrator",
    "acceptance_criteria": [
      "Given repo markers for each stack, when detection runs, then attach_rules is correct and logged.",
      "100% of supported stacks produce a rule_attach_log entry with timestamp and mapping.",
      "Unit checks verify at least one file per stack triggers expected rules."
    ],
    "artifacts": [
      ".cursor/rules/execution_orchestrator.mdc",
      "rule_attach_log.json"
    ],
    "dependencies": [],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-002": {
    "title": "Two-session audit \u2192 peer review gate (bias separation)",
    "priority": "P0",
    "type": "feature",
    "owner_role": "auditor_ai",
    "acceptance_criteria": [
      "/audit produces Summary_Report.md with line-cited evidence to Action_Plan.md and codebase.",
      "/peer_review produces Validation_Report.md with CONFIRM/CHALLENGE, NEW-RISK, and clear GO/NO-GO.",
      "NO cross-session memory contamination (manual spot-check of narratives differs)."
    ],
    "artifacts": [
      "frameworks/fwk-001-cursor-rules/examples/Summary_Report.md",
      "frameworks/fwk-001-cursor-rules/examples/Validation_Report.md"
    ],
    "dependencies": [
      "BL-004"
    ],
    "risk": "Medium",
    "effort": "M"
  },
  "SYNTHESIS-PHASE-REQUIREMENT": {
    "title": "Final plan must include Phase-by-Phase section",
    "priority": "P0",
    "type": "quality",
    "owner_role": "principal_engineer_ai",
    "acceptance_criteria": [
      "Final_Implementation_Plan.md contains '## Phase-by-Phase' with BL ranges (BL-001–BL-006, BL-007–BL-012, BL-013–BL-020, BL-021–BL-027)."
    ],
    "artifacts": [
      "memory-bank/plan/Final_Implementation_Plan.md"
    ],
    "dependencies": []
  },
  "BL-003": {
    "title": "Product backlog \u2192 technical plan \u2192 draft Action_Plan generator",
    "priority": "P0",
    "type": "feature",
    "owner_role": "planning_ai",
    "acceptance_criteria": [
      "Running generator with a valid backlog yields Action_Plan.md in memory-bank/plan/.",
      "The plan covers phases, gates, routing, security, observability, and memory bridge.",
      "Auditor can run on the draft and produce a usable Summary_Report.md."
    ],
    "artifacts": [
      "memory-bank/plan/Action_Plan.md",
      "tools/generate_action_plan.py"
    ],
    "dependencies": [],
    "risk": "Low",
    "effort": "M"
  },
  "BL-016": {
    "title": "Java/Spring Boot rules migration and attach coverage",
    "priority": "P2",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "Sample Java/Spring files trigger only Java rules; no false positives to other stacks.",
      "Attach latency P95 \u2264 200ms per check on local run."
    ],
    "artifacts": [
      ".cursor/frameworks/backend/java/**",
      "rule_attach_log.json"
    ],
    "dependencies": [
      "BL-001",
      "BL-008"
    ],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-017": {
    "title": "Rust rules migration and attach coverage",
    "priority": "P2",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "Sample Rust files trigger only Rust rules with 0 false positives.",
      "Attach latency P95 \u2264 200ms per check on local run."
    ],
    "artifacts": [
      ".cursor/frameworks/backend/rust/**",
      "rule_attach_log.json"
    ],
    "dependencies": [
      "BL-001",
      "BL-008"
    ],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-018": {
    "title": "Unity (C#) game development rules and attach coverage",
    "priority": "P2",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "Sample Unity C# files attach only Unity/C# rules; 0 false positives.",
      "Attach latency P95 \u2264 200ms per check on local run."
    ],
    "artifacts": [
      ".cursor/frameworks/specialized/unity/**",
      "rule_attach_log.json"
    ],
    "dependencies": [
      "BL-001",
      "BL-008"
    ],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-019": {
    "title": "iOS/Swift mobile rules and attach coverage",
    "priority": "P2",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "Sample Swift files attach only iOS rules; 0 false positives.",
      "Attach latency P95 \u2264 200ms per check on local run."
    ],
    "artifacts": [
      ".cursor/frameworks/mobile/ios/**",
      "rule_attach_log.json"
    ],
    "dependencies": [
      "BL-001",
      "BL-008"
    ],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-020": {
    "title": "E-commerce rules (Shopify/WordPress) and attach coverage",
    "priority": "P2",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "Sample Shopify/WordPress files attach only e-commerce rules; 0 false positives.",
      "Attach latency P95 \u2264 200ms per check on local run."
    ],
    "artifacts": [
      ".cursor/frameworks/specialized/ecommerce/**",
      "rule_attach_log.json"
    ],
    "dependencies": [
      "BL-001",
      "BL-008",
      "BL-009"
    ],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-004": {
    "title": "Example project wiring for gates (audit/validation/synthesis)",
    "priority": "P0",
    "type": "docs",
    "owner_role": "documentation_ai",
    "acceptance_criteria": [
      "Following README steps produces all 3 artifacts with correct content.",
      "GO/NO-GO logic is demonstrable with toggled inputs."
    ],
    "artifacts": [
      "frameworks/fwk-001-cursor-rules/examples/Action_Plan.md",
      "frameworks/fwk-001-cursor-rules/examples/Summary_Report.md",
      "frameworks/fwk-001-cursor-rules/examples/Validation_Report.md",
      "frameworks/fwk-001-cursor-rules/examples/Final_Implementation_Plan.md"
    ],
    "dependencies": [
      "BL-003"
    ],
    "risk": "Low",
    "effort": "S"
  },
  "BL-005": {
    "title": "Security QA baseline (SQLi/XSS/Auth) integrated in qa_ai",
    "priority": "P0",
    "type": "quality",
    "owner_role": "qa_ai",
    "acceptance_criteria": [
      "Security checks list present and mapped to pass/fail signals.",
      "Demo repo yields a security_report.md; failing checks block pipeline."
    ],
    "artifacts": [
      ".cursor/rules/qa_ai.mdc",
      "security_report.md"
    ],
    "dependencies": [],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-006": {
    "title": "Observability starter pack (alerts + dashboards) validation",
    "priority": "P0",
    "type": "ops",
    "owner_role": "observability_ai",
    "acceptance_criteria": [
      "YAML lints cleanly; Mermaid renders without errors.",
      "Observability gate passes with these artifacts present."
    ],
    "artifacts": [
      "frameworks/fwk-001-cursor-rules/observability/alerts.yaml",
      "frameworks/fwk-001-cursor-rules/observability/dashboards.mmd"
    ],
    "dependencies": [],
    "risk": "Low",
    "effort": "S"
  },
  "BL-007": {
    "title": "Memory learning loop (pattern_library.json) + storage layout",
    "priority": "P0",
    "type": "feature",
    "owner_role": "memory_ai",
    "acceptance_criteria": [
      "After QA PASS, learning signals are appended to pattern_library.json.",
      "recall/snapshot/learn CLI confirms round-trip."
    ],
    "artifacts": [
      ".cursor/rules/memory_ai.mdc",
      "storage/memory/knowledge_base.jsonl",
      "storage/memory/kb.index.faiss",
      "pattern_library.json"
    ],
    "dependencies": [],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-008": {
    "title": "Framework auto-attach globs coverage and tests",
    "priority": "P0",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "For a minimal file in each stack, attach log lists the expected rules.",
      "No false positives for unrelated stacks."
    ],
    "artifacts": [
      ".cursor/frameworks/**.mdc",
      "tests for rule attach mapping"
    ],
    "dependencies": [
      "BL-001"
    ],
    "risk": "Low",
    "effort": "S"
  },
  "BL-009": {
    "title": "Onboarding & Quick Start for solo dev workflow",
    "priority": "P0",
    "type": "docs",
    "owner_role": "documentation_ai",
    "acceptance_criteria": [
      "Following guide produces all intermediate artifacts.",
      "New user can run both sessions without confusion (separate chats)."
    ],
    "artifacts": [
      "/workspace/docs/inventories/*",
      "/frameworks/fwk-001-cursor-rules/QUICK_START.md"
    ],
    "dependencies": [
      "BL-004"
    ],
    "risk": "Low",
    "effort": "S"
  },
  "BL-010": {
    "title": "Planner-first mode (+ confirmation prompts) validation",
    "priority": "P1",
    "type": "feature",
    "owner_role": "planner_moderator_ai",
    "acceptance_criteria": [
      "Restricted actions require explicit confirmation (logged with timestamp and actor).",
      "Toggling off restores normal behavior."
    ],
    "artifacts": [
      "confirmation logs"
    ],
    "dependencies": [],
    "risk": "Low",
    "effort": "S"
  },
  "BL-011": {
    "title": "Promotion snapshots + rollback rehearsal",
    "priority": "P1",
    "type": "ops",
    "owner_role": "mlops_ai",
    "acceptance_criteria": [
      "Snapshot creation and restoration succeeds with logs.",
      "Rehearsal completes without errors; health checks OK post-restore."
    ],
    "artifacts": [
      "promotion/snapshot_cli.py",
      "promotion/rollback_playbook.md"
    ],
    "dependencies": [],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-012": {
    "title": "Routing override progressive mode tests",
    "priority": "P1",
    "type": "quality",
    "owner_role": "execution_orchestrator",
    "acceptance_criteria": [
      "Applying overrides changes effective routing as expected.",
      "Restoring .bak reverts to baseline; conflicts report remains empty."
    ],
    "artifacts": [
      "DOCS/changes/routing_override.yaml",
      "DOCS/changes/routing_effective.shadow.json"
    ],
    "dependencies": [],
    "risk": "Low",
    "effort": "S"
  },
  "BL-013": {
    "title": "Hydration selector scenarios",
    "priority": "P1",
    "type": "quality",
    "owner_role": "codegen_ai",
    "acceptance_criteria": [
      "All hydration tests pass locally; selector decisions are deterministic."
    ],
    "artifacts": [
      "hydration/hydration_selector.py",
      "hydration/hydration_tests.yaml"
    ],
    "dependencies": [],
    "risk": "Low",
    "effort": "S"
  },
  "BL-014": {
    "title": "Performance & concurrency thresholds",
    "priority": "P1",
    "type": "quality",
    "owner_role": "qa_ai",
    "acceptance_criteria": [
      "Coverage \u2265 80%; top 10 test durations under target; concurrency tests pass."
    ],
    "artifacts": [
      "pytest.ini updates",
      "tests/concurrency"
    ],
    "dependencies": [],
    "risk": "Medium",
    "effort": "M"
  },
  "BL-015": {
    "title": "Freelance business templates (client onboarding, QA workflows)",
    "priority": "P2",
    "type": "docs",
    "owner_role": "product_owner_ai",
    "acceptance_criteria": [
      "Templates included and referenced from Quick Start.",
      "At least two verticals have baseline rulesets."
    ],
    "artifacts": [
      ".cursor/templates/*",
      "/workspace/docs/inventories/DECISION_GUIDE.md"
    ],
    "dependencies": [
      "BL-009"
    ],
    "risk": "Low",
    "effort": "M"
  }
}